/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */





declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  AuthPayload: { // root type
    email: string; // String!
    id: number; // Int!
    token: string; // String!
    username?: string | null; // String
  }
  Character: { // root type
    eyeColor?: string | null; // String
    height?: number | null; // Int
    id?: string | null; // String
    isFavourite?: boolean | null; // Boolean
    name?: string | null; // String
  }
  Dashboard: { // root type
    characters?: Array<NexusGenRootTypes['Person'] | null> | null; // [Person]
    user?: NexusGenRootTypes['User'] | null; // User
  }
  Film: {};
  FilmCharactersConnection: {};
  FilmCharactersEdge: {};
  FilmPlanetsConnection: {};
  FilmPlanetsEdge: {};
  FilmSpeciesConnection: {};
  FilmSpeciesEdge: {};
  FilmStarshipsConnection: {};
  FilmStarshipsEdge: {};
  FilmVehiclesConnection: {};
  FilmVehiclesEdge: {};
  FilmsConnection: {};
  FilmsEdge: {};
  Mutation: {};
  PageInfo: {};
  PeopleConnection: {};
  PeopleEdge: {};
  Person: {};
  PersonFilmsConnection: {};
  PersonFilmsEdge: {};
  PersonStarshipsConnection: {};
  PersonStarshipsEdge: {};
  PersonVehiclesConnection: {};
  PersonVehiclesEdge: {};
  Planet: {};
  PlanetFilmsConnection: {};
  PlanetFilmsEdge: {};
  PlanetResidentsConnection: {};
  PlanetResidentsEdge: {};
  PlanetsConnection: {};
  PlanetsEdge: {};
  Query: {};
  Root: {};
  Species: {};
  SpeciesConnection: {};
  SpeciesEdge: {};
  SpeciesFilmsConnection: {};
  SpeciesFilmsEdge: {};
  SpeciesPeopleConnection: {};
  SpeciesPeopleEdge: {};
  StarredCharacter: { // root type
    externalId: string; // String!
    id: number; // Int!
    userId: number; // Int!
  }
  Starship: {};
  StarshipFilmsConnection: {};
  StarshipFilmsEdge: {};
  StarshipPilotsConnection: {};
  StarshipPilotsEdge: {};
  StarshipsConnection: {};
  StarshipsEdge: {};
  User: { // root type
    email: string; // String!
    id: number; // Int!
    password: string; // String!
    username?: string | null; // String
  }
  Vehicle: {};
  VehicleFilmsConnection: {};
  VehicleFilmsEdge: {};
  VehiclePilotsConnection: {};
  VehiclePilotsEdge: {};
  VehiclesConnection: {};
  VehiclesEdge: {};
}

export interface NexusGenInterfaces {
  Node: NexusGenRootTypes['Film'] | NexusGenRootTypes['Person'] | NexusGenRootTypes['Planet'] | NexusGenRootTypes['Species'] | NexusGenRootTypes['Starship'] | NexusGenRootTypes['Vehicle'];
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenInterfaces & NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  AuthPayload: { // field return type
    email: string; // String!
    id: number; // Int!
    token: string; // String!
    username: string | null; // String
  }
  Character: { // field return type
    eyeColor: string | null; // String
    height: number | null; // Int
    id: string | null; // String
    isFavourite: boolean | null; // Boolean
    name: string | null; // String
  }
  Dashboard: { // field return type
    characters: Array<NexusGenRootTypes['Person'] | null> | null; // [Person]
    user: NexusGenRootTypes['User'] | null; // User
  }
  Film: { // field return type
    characterConnection: NexusGenRootTypes['FilmCharactersConnection'] | null; // FilmCharactersConnection
    created: string | null; // String
    director: string | null; // String
    edited: string | null; // String
    episodeID: number | null; // Int
    id: string; // ID!
    openingCrawl: string | null; // String
    planetConnection: NexusGenRootTypes['FilmPlanetsConnection'] | null; // FilmPlanetsConnection
    producers: Array<string | null> | null; // [String]
    releaseDate: string | null; // String
    speciesConnection: NexusGenRootTypes['FilmSpeciesConnection'] | null; // FilmSpeciesConnection
    starshipConnection: NexusGenRootTypes['FilmStarshipsConnection'] | null; // FilmStarshipsConnection
    title: string | null; // String
    vehicleConnection: NexusGenRootTypes['FilmVehiclesConnection'] | null; // FilmVehiclesConnection
  }
  FilmCharactersConnection: { // field return type
    characters: Array<NexusGenRootTypes['Person'] | null> | null; // [Person]
    edges: Array<NexusGenRootTypes['FilmCharactersEdge'] | null> | null; // [FilmCharactersEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number | null; // Int
  }
  FilmCharactersEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Person'] | null; // Person
  }
  FilmPlanetsConnection: { // field return type
    edges: Array<NexusGenRootTypes['FilmPlanetsEdge'] | null> | null; // [FilmPlanetsEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    planets: Array<NexusGenRootTypes['Planet'] | null> | null; // [Planet]
    totalCount: number | null; // Int
  }
  FilmPlanetsEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Planet'] | null; // Planet
  }
  FilmSpeciesConnection: { // field return type
    edges: Array<NexusGenRootTypes['FilmSpeciesEdge'] | null> | null; // [FilmSpeciesEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    species: Array<NexusGenRootTypes['Species'] | null> | null; // [Species]
    totalCount: number | null; // Int
  }
  FilmSpeciesEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Species'] | null; // Species
  }
  FilmStarshipsConnection: { // field return type
    edges: Array<NexusGenRootTypes['FilmStarshipsEdge'] | null> | null; // [FilmStarshipsEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    starships: Array<NexusGenRootTypes['Starship'] | null> | null; // [Starship]
    totalCount: number | null; // Int
  }
  FilmStarshipsEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Starship'] | null; // Starship
  }
  FilmVehiclesConnection: { // field return type
    edges: Array<NexusGenRootTypes['FilmVehiclesEdge'] | null> | null; // [FilmVehiclesEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number | null; // Int
    vehicles: Array<NexusGenRootTypes['Vehicle'] | null> | null; // [Vehicle]
  }
  FilmVehiclesEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Vehicle'] | null; // Vehicle
  }
  FilmsConnection: { // field return type
    edges: Array<NexusGenRootTypes['FilmsEdge'] | null> | null; // [FilmsEdge]
    films: Array<NexusGenRootTypes['Film'] | null> | null; // [Film]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number | null; // Int
  }
  FilmsEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Film'] | null; // Film
  }
  Mutation: { // field return type
    login: NexusGenRootTypes['AuthPayload'] | null; // AuthPayload
    signupUser: NexusGenRootTypes['AuthPayload'] | null; // AuthPayload
    toggleCharacter: NexusGenRootTypes['Character'] | null; // Character
  }
  PageInfo: { // field return type
    endCursor: string | null; // String
    hasNextPage: boolean; // Boolean!
    hasPreviousPage: boolean; // Boolean!
    startCursor: string | null; // String
  }
  PeopleConnection: { // field return type
    edges: Array<NexusGenRootTypes['PeopleEdge'] | null> | null; // [PeopleEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    people: Array<NexusGenRootTypes['Person'] | null> | null; // [Person]
    totalCount: number | null; // Int
  }
  PeopleEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Person'] | null; // Person
  }
  Person: { // field return type
    birthYear: string | null; // String
    created: string | null; // String
    edited: string | null; // String
    eyeColor: string | null; // String
    filmConnection: NexusGenRootTypes['PersonFilmsConnection'] | null; // PersonFilmsConnection
    gender: string | null; // String
    hairColor: string | null; // String
    height: number | null; // Int
    homeworld: NexusGenRootTypes['Planet'] | null; // Planet
    id: string; // ID!
    mass: number | null; // Float
    name: string | null; // String
    skinColor: string | null; // String
    species: NexusGenRootTypes['Species'] | null; // Species
    starshipConnection: NexusGenRootTypes['PersonStarshipsConnection'] | null; // PersonStarshipsConnection
    vehicleConnection: NexusGenRootTypes['PersonVehiclesConnection'] | null; // PersonVehiclesConnection
  }
  PersonFilmsConnection: { // field return type
    edges: Array<NexusGenRootTypes['PersonFilmsEdge'] | null> | null; // [PersonFilmsEdge]
    films: Array<NexusGenRootTypes['Film'] | null> | null; // [Film]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number | null; // Int
  }
  PersonFilmsEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Film'] | null; // Film
  }
  PersonStarshipsConnection: { // field return type
    edges: Array<NexusGenRootTypes['PersonStarshipsEdge'] | null> | null; // [PersonStarshipsEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    starships: Array<NexusGenRootTypes['Starship'] | null> | null; // [Starship]
    totalCount: number | null; // Int
  }
  PersonStarshipsEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Starship'] | null; // Starship
  }
  PersonVehiclesConnection: { // field return type
    edges: Array<NexusGenRootTypes['PersonVehiclesEdge'] | null> | null; // [PersonVehiclesEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number | null; // Int
    vehicles: Array<NexusGenRootTypes['Vehicle'] | null> | null; // [Vehicle]
  }
  PersonVehiclesEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Vehicle'] | null; // Vehicle
  }
  Planet: { // field return type
    climates: Array<string | null> | null; // [String]
    created: string | null; // String
    diameter: number | null; // Int
    edited: string | null; // String
    filmConnection: NexusGenRootTypes['PlanetFilmsConnection'] | null; // PlanetFilmsConnection
    gravity: string | null; // String
    id: string; // ID!
    name: string | null; // String
    orbitalPeriod: number | null; // Int
    population: number | null; // Float
    residentConnection: NexusGenRootTypes['PlanetResidentsConnection'] | null; // PlanetResidentsConnection
    rotationPeriod: number | null; // Int
    surfaceWater: number | null; // Float
    terrains: Array<string | null> | null; // [String]
  }
  PlanetFilmsConnection: { // field return type
    edges: Array<NexusGenRootTypes['PlanetFilmsEdge'] | null> | null; // [PlanetFilmsEdge]
    films: Array<NexusGenRootTypes['Film'] | null> | null; // [Film]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number | null; // Int
  }
  PlanetFilmsEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Film'] | null; // Film
  }
  PlanetResidentsConnection: { // field return type
    edges: Array<NexusGenRootTypes['PlanetResidentsEdge'] | null> | null; // [PlanetResidentsEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    residents: Array<NexusGenRootTypes['Person'] | null> | null; // [Person]
    totalCount: number | null; // Int
  }
  PlanetResidentsEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Person'] | null; // Person
  }
  PlanetsConnection: { // field return type
    edges: Array<NexusGenRootTypes['PlanetsEdge'] | null> | null; // [PlanetsEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    planets: Array<NexusGenRootTypes['Planet'] | null> | null; // [Planet]
    totalCount: number | null; // Int
  }
  PlanetsEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Planet'] | null; // Planet
  }
  Query: { // field return type
    Users: Array<NexusGenRootTypes['User'] | null> | null; // [User]
    character: NexusGenRootTypes['Character'] | null; // Character
    dashboard: NexusGenRootTypes['Dashboard'] | null; // Dashboard
  }
  Root: { // field return type
    allFilms: NexusGenRootTypes['FilmsConnection'] | null; // FilmsConnection
    allPeople: NexusGenRootTypes['PeopleConnection'] | null; // PeopleConnection
    allPlanets: NexusGenRootTypes['PlanetsConnection'] | null; // PlanetsConnection
    allSpecies: NexusGenRootTypes['SpeciesConnection'] | null; // SpeciesConnection
    allStarships: NexusGenRootTypes['StarshipsConnection'] | null; // StarshipsConnection
    allVehicles: NexusGenRootTypes['VehiclesConnection'] | null; // VehiclesConnection
    film: NexusGenRootTypes['Film'] | null; // Film
    node: NexusGenRootTypes['Node'] | null; // Node
    person: NexusGenRootTypes['Person'] | null; // Person
    planet: NexusGenRootTypes['Planet'] | null; // Planet
    species: NexusGenRootTypes['Species'] | null; // Species
    starship: NexusGenRootTypes['Starship'] | null; // Starship
    vehicle: NexusGenRootTypes['Vehicle'] | null; // Vehicle
  }
  Species: { // field return type
    averageHeight: number | null; // Float
    averageLifespan: number | null; // Int
    classification: string | null; // String
    created: string | null; // String
    designation: string | null; // String
    edited: string | null; // String
    eyeColors: Array<string | null> | null; // [String]
    filmConnection: NexusGenRootTypes['SpeciesFilmsConnection'] | null; // SpeciesFilmsConnection
    hairColors: Array<string | null> | null; // [String]
    homeworld: NexusGenRootTypes['Planet'] | null; // Planet
    id: string; // ID!
    language: string | null; // String
    name: string | null; // String
    personConnection: NexusGenRootTypes['SpeciesPeopleConnection'] | null; // SpeciesPeopleConnection
    skinColors: Array<string | null> | null; // [String]
  }
  SpeciesConnection: { // field return type
    edges: Array<NexusGenRootTypes['SpeciesEdge'] | null> | null; // [SpeciesEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    species: Array<NexusGenRootTypes['Species'] | null> | null; // [Species]
    totalCount: number | null; // Int
  }
  SpeciesEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Species'] | null; // Species
  }
  SpeciesFilmsConnection: { // field return type
    edges: Array<NexusGenRootTypes['SpeciesFilmsEdge'] | null> | null; // [SpeciesFilmsEdge]
    films: Array<NexusGenRootTypes['Film'] | null> | null; // [Film]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number | null; // Int
  }
  SpeciesFilmsEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Film'] | null; // Film
  }
  SpeciesPeopleConnection: { // field return type
    edges: Array<NexusGenRootTypes['SpeciesPeopleEdge'] | null> | null; // [SpeciesPeopleEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    people: Array<NexusGenRootTypes['Person'] | null> | null; // [Person]
    totalCount: number | null; // Int
  }
  SpeciesPeopleEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Person'] | null; // Person
  }
  StarredCharacter: { // field return type
    externalId: string; // String!
    id: number; // Int!
    userId: number; // Int!
  }
  Starship: { // field return type
    MGLT: number | null; // Int
    cargoCapacity: number | null; // Float
    consumables: string | null; // String
    costInCredits: number | null; // Float
    created: string | null; // String
    crew: string | null; // String
    edited: string | null; // String
    filmConnection: NexusGenRootTypes['StarshipFilmsConnection'] | null; // StarshipFilmsConnection
    hyperdriveRating: number | null; // Float
    id: string; // ID!
    length: number | null; // Float
    manufacturers: Array<string | null> | null; // [String]
    maxAtmospheringSpeed: number | null; // Int
    model: string | null; // String
    name: string | null; // String
    passengers: string | null; // String
    pilotConnection: NexusGenRootTypes['StarshipPilotsConnection'] | null; // StarshipPilotsConnection
    starshipClass: string | null; // String
  }
  StarshipFilmsConnection: { // field return type
    edges: Array<NexusGenRootTypes['StarshipFilmsEdge'] | null> | null; // [StarshipFilmsEdge]
    films: Array<NexusGenRootTypes['Film'] | null> | null; // [Film]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number | null; // Int
  }
  StarshipFilmsEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Film'] | null; // Film
  }
  StarshipPilotsConnection: { // field return type
    edges: Array<NexusGenRootTypes['StarshipPilotsEdge'] | null> | null; // [StarshipPilotsEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    pilots: Array<NexusGenRootTypes['Person'] | null> | null; // [Person]
    totalCount: number | null; // Int
  }
  StarshipPilotsEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Person'] | null; // Person
  }
  StarshipsConnection: { // field return type
    edges: Array<NexusGenRootTypes['StarshipsEdge'] | null> | null; // [StarshipsEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    starships: Array<NexusGenRootTypes['Starship'] | null> | null; // [Starship]
    totalCount: number | null; // Int
  }
  StarshipsEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Starship'] | null; // Starship
  }
  User: { // field return type
    email: string; // String!
    id: number; // Int!
    password: string; // String!
    starredCharacters: Array<NexusGenRootTypes['Person'] | null> | null; // [Person]
    username: string | null; // String
  }
  Vehicle: { // field return type
    cargoCapacity: number | null; // Float
    consumables: string | null; // String
    costInCredits: number | null; // Float
    created: string | null; // String
    crew: string | null; // String
    edited: string | null; // String
    filmConnection: NexusGenRootTypes['VehicleFilmsConnection'] | null; // VehicleFilmsConnection
    id: string; // ID!
    length: number | null; // Float
    manufacturers: Array<string | null> | null; // [String]
    maxAtmospheringSpeed: number | null; // Int
    model: string | null; // String
    name: string | null; // String
    passengers: string | null; // String
    pilotConnection: NexusGenRootTypes['VehiclePilotsConnection'] | null; // VehiclePilotsConnection
    vehicleClass: string | null; // String
  }
  VehicleFilmsConnection: { // field return type
    edges: Array<NexusGenRootTypes['VehicleFilmsEdge'] | null> | null; // [VehicleFilmsEdge]
    films: Array<NexusGenRootTypes['Film'] | null> | null; // [Film]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number | null; // Int
  }
  VehicleFilmsEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Film'] | null; // Film
  }
  VehiclePilotsConnection: { // field return type
    edges: Array<NexusGenRootTypes['VehiclePilotsEdge'] | null> | null; // [VehiclePilotsEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    pilots: Array<NexusGenRootTypes['Person'] | null> | null; // [Person]
    totalCount: number | null; // Int
  }
  VehiclePilotsEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Person'] | null; // Person
  }
  VehiclesConnection: { // field return type
    edges: Array<NexusGenRootTypes['VehiclesEdge'] | null> | null; // [VehiclesEdge]
    pageInfo: NexusGenRootTypes['PageInfo']; // PageInfo!
    totalCount: number | null; // Int
    vehicles: Array<NexusGenRootTypes['Vehicle'] | null> | null; // [Vehicle]
  }
  VehiclesEdge: { // field return type
    cursor: string; // String!
    node: NexusGenRootTypes['Vehicle'] | null; // Vehicle
  }
  Node: { // field return type
    id: string; // ID!
  }
}

export interface NexusGenFieldTypeNames {
  AuthPayload: { // field return type name
    email: 'String'
    id: 'Int'
    token: 'String'
    username: 'String'
  }
  Character: { // field return type name
    eyeColor: 'String'
    height: 'Int'
    id: 'String'
    isFavourite: 'Boolean'
    name: 'String'
  }
  Dashboard: { // field return type name
    characters: 'Person'
    user: 'User'
  }
  Film: { // field return type name
    characterConnection: 'FilmCharactersConnection'
    created: 'String'
    director: 'String'
    edited: 'String'
    episodeID: 'Int'
    id: 'ID'
    openingCrawl: 'String'
    planetConnection: 'FilmPlanetsConnection'
    producers: 'String'
    releaseDate: 'String'
    speciesConnection: 'FilmSpeciesConnection'
    starshipConnection: 'FilmStarshipsConnection'
    title: 'String'
    vehicleConnection: 'FilmVehiclesConnection'
  }
  FilmCharactersConnection: { // field return type name
    characters: 'Person'
    edges: 'FilmCharactersEdge'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  FilmCharactersEdge: { // field return type name
    cursor: 'String'
    node: 'Person'
  }
  FilmPlanetsConnection: { // field return type name
    edges: 'FilmPlanetsEdge'
    pageInfo: 'PageInfo'
    planets: 'Planet'
    totalCount: 'Int'
  }
  FilmPlanetsEdge: { // field return type name
    cursor: 'String'
    node: 'Planet'
  }
  FilmSpeciesConnection: { // field return type name
    edges: 'FilmSpeciesEdge'
    pageInfo: 'PageInfo'
    species: 'Species'
    totalCount: 'Int'
  }
  FilmSpeciesEdge: { // field return type name
    cursor: 'String'
    node: 'Species'
  }
  FilmStarshipsConnection: { // field return type name
    edges: 'FilmStarshipsEdge'
    pageInfo: 'PageInfo'
    starships: 'Starship'
    totalCount: 'Int'
  }
  FilmStarshipsEdge: { // field return type name
    cursor: 'String'
    node: 'Starship'
  }
  FilmVehiclesConnection: { // field return type name
    edges: 'FilmVehiclesEdge'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
    vehicles: 'Vehicle'
  }
  FilmVehiclesEdge: { // field return type name
    cursor: 'String'
    node: 'Vehicle'
  }
  FilmsConnection: { // field return type name
    edges: 'FilmsEdge'
    films: 'Film'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  FilmsEdge: { // field return type name
    cursor: 'String'
    node: 'Film'
  }
  Mutation: { // field return type name
    login: 'AuthPayload'
    signupUser: 'AuthPayload'
    toggleCharacter: 'Character'
  }
  PageInfo: { // field return type name
    endCursor: 'String'
    hasNextPage: 'Boolean'
    hasPreviousPage: 'Boolean'
    startCursor: 'String'
  }
  PeopleConnection: { // field return type name
    edges: 'PeopleEdge'
    pageInfo: 'PageInfo'
    people: 'Person'
    totalCount: 'Int'
  }
  PeopleEdge: { // field return type name
    cursor: 'String'
    node: 'Person'
  }
  Person: { // field return type name
    birthYear: 'String'
    created: 'String'
    edited: 'String'
    eyeColor: 'String'
    filmConnection: 'PersonFilmsConnection'
    gender: 'String'
    hairColor: 'String'
    height: 'Int'
    homeworld: 'Planet'
    id: 'ID'
    mass: 'Float'
    name: 'String'
    skinColor: 'String'
    species: 'Species'
    starshipConnection: 'PersonStarshipsConnection'
    vehicleConnection: 'PersonVehiclesConnection'
  }
  PersonFilmsConnection: { // field return type name
    edges: 'PersonFilmsEdge'
    films: 'Film'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  PersonFilmsEdge: { // field return type name
    cursor: 'String'
    node: 'Film'
  }
  PersonStarshipsConnection: { // field return type name
    edges: 'PersonStarshipsEdge'
    pageInfo: 'PageInfo'
    starships: 'Starship'
    totalCount: 'Int'
  }
  PersonStarshipsEdge: { // field return type name
    cursor: 'String'
    node: 'Starship'
  }
  PersonVehiclesConnection: { // field return type name
    edges: 'PersonVehiclesEdge'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
    vehicles: 'Vehicle'
  }
  PersonVehiclesEdge: { // field return type name
    cursor: 'String'
    node: 'Vehicle'
  }
  Planet: { // field return type name
    climates: 'String'
    created: 'String'
    diameter: 'Int'
    edited: 'String'
    filmConnection: 'PlanetFilmsConnection'
    gravity: 'String'
    id: 'ID'
    name: 'String'
    orbitalPeriod: 'Int'
    population: 'Float'
    residentConnection: 'PlanetResidentsConnection'
    rotationPeriod: 'Int'
    surfaceWater: 'Float'
    terrains: 'String'
  }
  PlanetFilmsConnection: { // field return type name
    edges: 'PlanetFilmsEdge'
    films: 'Film'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  PlanetFilmsEdge: { // field return type name
    cursor: 'String'
    node: 'Film'
  }
  PlanetResidentsConnection: { // field return type name
    edges: 'PlanetResidentsEdge'
    pageInfo: 'PageInfo'
    residents: 'Person'
    totalCount: 'Int'
  }
  PlanetResidentsEdge: { // field return type name
    cursor: 'String'
    node: 'Person'
  }
  PlanetsConnection: { // field return type name
    edges: 'PlanetsEdge'
    pageInfo: 'PageInfo'
    planets: 'Planet'
    totalCount: 'Int'
  }
  PlanetsEdge: { // field return type name
    cursor: 'String'
    node: 'Planet'
  }
  Query: { // field return type name
    Users: 'User'
    character: 'Character'
    dashboard: 'Dashboard'
  }
  Root: { // field return type name
    allFilms: 'FilmsConnection'
    allPeople: 'PeopleConnection'
    allPlanets: 'PlanetsConnection'
    allSpecies: 'SpeciesConnection'
    allStarships: 'StarshipsConnection'
    allVehicles: 'VehiclesConnection'
    film: 'Film'
    node: 'Node'
    person: 'Person'
    planet: 'Planet'
    species: 'Species'
    starship: 'Starship'
    vehicle: 'Vehicle'
  }
  Species: { // field return type name
    averageHeight: 'Float'
    averageLifespan: 'Int'
    classification: 'String'
    created: 'String'
    designation: 'String'
    edited: 'String'
    eyeColors: 'String'
    filmConnection: 'SpeciesFilmsConnection'
    hairColors: 'String'
    homeworld: 'Planet'
    id: 'ID'
    language: 'String'
    name: 'String'
    personConnection: 'SpeciesPeopleConnection'
    skinColors: 'String'
  }
  SpeciesConnection: { // field return type name
    edges: 'SpeciesEdge'
    pageInfo: 'PageInfo'
    species: 'Species'
    totalCount: 'Int'
  }
  SpeciesEdge: { // field return type name
    cursor: 'String'
    node: 'Species'
  }
  SpeciesFilmsConnection: { // field return type name
    edges: 'SpeciesFilmsEdge'
    films: 'Film'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  SpeciesFilmsEdge: { // field return type name
    cursor: 'String'
    node: 'Film'
  }
  SpeciesPeopleConnection: { // field return type name
    edges: 'SpeciesPeopleEdge'
    pageInfo: 'PageInfo'
    people: 'Person'
    totalCount: 'Int'
  }
  SpeciesPeopleEdge: { // field return type name
    cursor: 'String'
    node: 'Person'
  }
  StarredCharacter: { // field return type name
    externalId: 'String'
    id: 'Int'
    userId: 'Int'
  }
  Starship: { // field return type name
    MGLT: 'Int'
    cargoCapacity: 'Float'
    consumables: 'String'
    costInCredits: 'Float'
    created: 'String'
    crew: 'String'
    edited: 'String'
    filmConnection: 'StarshipFilmsConnection'
    hyperdriveRating: 'Float'
    id: 'ID'
    length: 'Float'
    manufacturers: 'String'
    maxAtmospheringSpeed: 'Int'
    model: 'String'
    name: 'String'
    passengers: 'String'
    pilotConnection: 'StarshipPilotsConnection'
    starshipClass: 'String'
  }
  StarshipFilmsConnection: { // field return type name
    edges: 'StarshipFilmsEdge'
    films: 'Film'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  StarshipFilmsEdge: { // field return type name
    cursor: 'String'
    node: 'Film'
  }
  StarshipPilotsConnection: { // field return type name
    edges: 'StarshipPilotsEdge'
    pageInfo: 'PageInfo'
    pilots: 'Person'
    totalCount: 'Int'
  }
  StarshipPilotsEdge: { // field return type name
    cursor: 'String'
    node: 'Person'
  }
  StarshipsConnection: { // field return type name
    edges: 'StarshipsEdge'
    pageInfo: 'PageInfo'
    starships: 'Starship'
    totalCount: 'Int'
  }
  StarshipsEdge: { // field return type name
    cursor: 'String'
    node: 'Starship'
  }
  User: { // field return type name
    email: 'String'
    id: 'Int'
    password: 'String'
    starredCharacters: 'Person'
    username: 'String'
  }
  Vehicle: { // field return type name
    cargoCapacity: 'Float'
    consumables: 'String'
    costInCredits: 'Float'
    created: 'String'
    crew: 'String'
    edited: 'String'
    filmConnection: 'VehicleFilmsConnection'
    id: 'ID'
    length: 'Float'
    manufacturers: 'String'
    maxAtmospheringSpeed: 'Int'
    model: 'String'
    name: 'String'
    passengers: 'String'
    pilotConnection: 'VehiclePilotsConnection'
    vehicleClass: 'String'
  }
  VehicleFilmsConnection: { // field return type name
    edges: 'VehicleFilmsEdge'
    films: 'Film'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
  }
  VehicleFilmsEdge: { // field return type name
    cursor: 'String'
    node: 'Film'
  }
  VehiclePilotsConnection: { // field return type name
    edges: 'VehiclePilotsEdge'
    pageInfo: 'PageInfo'
    pilots: 'Person'
    totalCount: 'Int'
  }
  VehiclePilotsEdge: { // field return type name
    cursor: 'String'
    node: 'Person'
  }
  VehiclesConnection: { // field return type name
    edges: 'VehiclesEdge'
    pageInfo: 'PageInfo'
    totalCount: 'Int'
    vehicles: 'Vehicle'
  }
  VehiclesEdge: { // field return type name
    cursor: 'String'
    node: 'Vehicle'
  }
  Node: { // field return type name
    id: 'ID'
  }
}

export interface NexusGenArgTypes {
  Film: {
    characterConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    planetConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    speciesConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    starshipConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    vehicleConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  Mutation: {
    login: { // args
      email: string; // String!
      password: string; // String!
    }
    signupUser: { // args
      email: string; // String!
      password: string; // String!
    }
    toggleCharacter: { // args
      id: string; // String!
    }
  }
  Person: {
    filmConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    starshipConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    vehicleConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  Planet: {
    filmConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    residentConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  Query: {
    character: { // args
      id: string; // String!
    }
  }
  Root: {
    allFilms: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    allPeople: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    allPlanets: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    allSpecies: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    allStarships: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    allVehicles: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    film: { // args
      filmID?: string | null; // ID
      id?: string | null; // ID
    }
    node: { // args
      id: string; // ID!
    }
    person: { // args
      id?: string | null; // ID
      personID?: string | null; // ID
    }
    planet: { // args
      id?: string | null; // ID
      planetID?: string | null; // ID
    }
    species: { // args
      id?: string | null; // ID
      speciesID?: string | null; // ID
    }
    starship: { // args
      id?: string | null; // ID
      starshipID?: string | null; // ID
    }
    vehicle: { // args
      id?: string | null; // ID
      vehicleID?: string | null; // ID
    }
  }
  Species: {
    filmConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    personConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  Starship: {
    filmConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    pilotConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  Vehicle: {
    filmConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
    pilotConnection: { // args
      after?: string | null; // String
      before?: string | null; // String
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractTypeMembers {
  Node: "Film" | "Person" | "Planet" | "Species" | "Starship" | "Vehicle"
}

export interface NexusGenTypeInterfaces {
  Film: "Node"
  Person: "Node"
  Planet: "Node"
  Species: "Node"
  Starship: "Node"
  Vehicle: "Node"
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = keyof NexusGenInterfaces;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}